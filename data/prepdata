#!/bin/tcsh
#+
#  Script for preparing data for plots. Currently set up to run on octopus,
#  but you can fiddle dataroot which is the path to a tree resembling
# /jcmtdata/raw/scuba2 at JAC
#

source $SMURF_DIR/smurf.csh > /dev/null
source $CONVERT_DIR/convert.csh > /dev/null
source $KAPPA_DIR/kappa.csh > /dev/null

set dataroot = /scuba2
#set dataroot = /lhome/echapin/smurf_paper/data/raw
#set msg = quiet
set msg = verbose

# extra cleaning parameters
set clean_extra = "spikethresh=5"
#set clean_extra = ""

# where should we start?
set onlyone = 1
goto intro



# illustrate model divergence with lots of iterations --------------------------

diverge:

# Wayne's debris disk from cookbook -- use this for paper!!!
set obsdate = 20100313
set obsnum = 00029
set subfile = "001?".sdf
#set subfile = "001[345]".sdf

set lambda = s4a

echo "*** Processing $obsdate $obsnum ***"

set basename = $lambda$obsdate\_$obsnum

makemap $dataroot/$lambda/$obsdate/$obsnum/$basename\_"$subfile" \
    divergemap_default method=iterate \
    config='"^$STARLINK_DIR/share/smurf/dimmconfig.lis,numiter=5"' \
    msg_filter=$msg

makemap $dataroot/$lambda/$obsdate/$obsnum/$basename\_"$subfile" \
    divergemap_iter100 method=iterate \
    config='"^$STARLINK_DIR/share/smurf/dimmconfig.lis,numiter=100"' \
    msg_filter=$msg

if ( $onlyone == 1 ) goto finish


# some data for showing magnetic field pickup, magdksquid.pro ------------------

magpickup:

set lambda = s4a
set obsdate = 20100228
set obsnum = 00016
set subfile = "000[234]"

echo "*** Processing $obsdate $obsnum ***"

set basename = $lambda$obsdate\_$obsnum

echo "    Concatenating..."

sc2concat $dataroot/$lambda/$obsdate/$obsnum/$basename\_"$subfile" \
    $basename\_con noflat msg_filter=$msg

echo "    Cleaning..."

sc2clean $basename\_con $basename\_con\_clean \
    config='"^$STARLINK_DIR/share/smurf/dimmconfig.lis,'$clean_extra',compreprocess=1,com.boxcar=0,com.gain_box=600000"' \
    msg_filter=$msg

echo "    Convert to FITS..."

ndf2fits $basename\_con_clean \!$basename\_con_clean.fits msg_filter=$msg
ndf2fits $basename\_con_clean.more.scuba2.dksquid \
    \!$basename\_con\_clean\_dksquid.fits msg_filter=$msg

echo "    Getting JCMTState..."

jcmtstate2cat $lambda$obsdate\_$obsnum\_con > state_$obsdate\_$obsnum.tst

if ( $onlyone == 1 ) goto finish



# the following outputs are used by intro.pro ----------------------------------

intro:

# Uranus data from cookbook
#set obsdate = 20091214
#set obsnum = 00015
#set subfile = "000[23]"

# Wayne's debris disk from cookbook -- use this for paper!!!
#set obsdate = 20100313
#set obsnum = 00029
#set subfile = "000[12345]".sdf # "001[345]".sdf

# Some Lockman data
#set obsdate = 20100311
#set obsnum = 00065
#set subfile = "000[345]"

# 2011 data of NGC207IR post-upgrade (s4a,s4c,s4d,s8a,s8b,s8d)
#set obsdate = 20110203
#set obsnum = 00016
#set subfile = "000[345]"

# 2011 obs recommended by Harriet. 900" pong.: new data for paper
set obsdate = 20111112
set obsnum = 00038
set subfile = "000[12345]".sdf # "001[345]".sdf

echo "*** Processing $obsdate $obsnum ***"

#foreach lambda (s4a s4b s4c s4d s8a s8b s8c s8d)
#foreach lambda (s4a s8d)
foreach lambda (s4a s8b)

    # the noise clipping level. 1 seemed to be necessary for s8b in the
    # newer data to get a decent common-mode.

    set clip = 1

    echo "--- $lambda ---"

    echo "    Concatenating..."

    set basename = $lambda$obsdate\_$obsnum

    sc2concat $dataroot/$lambda/$obsdate/$obsnum/$basename\_"$subfile" \
        $lambda$obsdate\_$obsnum\_con msg_filter=$msg

    echo "    Cleaning..."

    sc2clean $basename\_con $basename\_con_clean \
        config='"^$STARLINK_DIR/share/smurf/dimmconfig.lis,'$clean_extra',noisecliphigh='$clip'"' \
        msg_filter=$msg

    echo "    Removing common-mode..."

    sc2clean $basename\_con $basename\_con_nocom \
        config='"^$STARLINK_DIR/share/smurf/dimmconfig.lis,'$clean_extra',compreprocess=1,com.gain_box=-999,noiseclipprecom=1,noisecliphigh='$clip'"' \
        msg_filter=$msg com=true

    echo "    Copy out QUALITY at single time slice as a mask..."

    ndfcopy "$basename\_con_nocom(,,1000)" mask_$lambda comp=qual trim \
        trimwcs msg_filter=$msg

    echo "    Convert to FITS..."

    ndf2fits $basename\_con_clean \!$basename\_con\_clean.fits msg_filter=$msg

    ndf2fits $lambda$obsdate\_$obsnum\_con_nocom \!$basename\_con\_nocom.fits \
        msg_filter=$msg

    ndf2fits mask_$lambda \!mask\_$lambda.fits msg_filter=$msg

    echo "    Calculating EXT model..."

    makemap $dataroot/$lambda/$obsdate/$obsnum/$basename\_"$subfile" junk \
        method=iterate \
        config='"^$STARLINK_DIR/share/smurf/dimmconfig.lis,numiter=1,exportndf=ext"' \
        msg_filter=$msg

    rm junk.sdf

    echo "    Convert to FITS..."
    
    ndf2fits $basename\_000\?_con_ext \!$basename\_con_ext.fits
end



echo "    Getting JCMTState..."

jcmtstate2cat s4a$obsdate\_$obsnum\_con > state_$obsdate\_$obsnum.tst

if ( $onlyone == 1 ) goto finish



# the following outputs are used by pca2band.pro -------------------------------

pca:

# 2011 obs recommended by Harriet. 900" pong.: new data for paper
set obsdate = 20111112
set obsnum = 00038
set subfile = "000[12345]".sdf # "001[345]".sdf

echo "*** Processing $obsdate $obsnum ***"

foreach lambda (s4a s8b)

    # Higher clipping levels here than in previous section to get a nicer
    # map of the full focal plane
    set clip = 3

    echo "--- $lambda ---"

    set basename = $lambda$obsdate\_$obsnum

    echo "    Cleaning..."

    # Note a trick here: setting filt_edgehigh=0.001 doesn't actually do any
    # filtering, but it does apply gap-filling to remove most of the big spikes
    # and step residuals, making the PCA analysis look cleaner.

    sc2clean $dataroot/$lambda/$obsdate/$obsnum/$basename\_"$subfile" \
        $basename\_con_clean_pca \
        config='"^$STARLINK_DIR/share/smurf/dimmconfig.lis,'$clean_extra',noisecliphigh='$clip',filt_edgehigh=0.001"' \
        msg_filter=$msg

    ndfcopy "$basename\_con_clean_pca(,,1000)" mask_pca_$lambda comp=qual trim \
        trimwcs msg_filter=$msg

    echo "    Convert to FITS..."

    ndf2fits $basename\_con_clean_pca \
        \!$basename\_con_clean_pca.fits msg_filter=$msg

    ndf2fits mask_pca_$lambda \!mask_pca_$lambda.fits msg_filter=$msg

end

if ( $onlyone == 1 ) goto finish




# The plot for section "COM, GAI: common-mode estimation". First -------------
# flatfield the raw data.

comgai:

$SMURF_DIR/flatfield $dataroot/s8a/20110907/00029/s8a20110907_00029_0023 \
                     ./s8a20110907_00029_0023_ff

#  Form an image holding the mean value in each bolometer.
$KAPPA_DIR/collapse s8a20110907_00029_0023_ff estimator=mean \
                    out=s8a20110907_00029_0023_cl axis=mjd

#  Expand the image out into a cube and subtract from the flatfielded data.
$KAPPA_DIR/wcsalign s8a20110907_00029_0023_cl ref=s8a20110907_00029_0023_ff \
                    out=s8a20110907_00029_0023_bk method=near accept
$KAPPA_DIR/sub s8a20110907_00029_0023_ff s8a20110907_00029_0023_bk \
               out=s8a20110907_00029_0023_res

#  Produce the plot as an eps file (pgplot.ps) in portrait mode.
$KAPPA_DIR/clinplot s8a20110907_00029_0023_res nx=8 ny=8 ybot=-0.02 ytop=0.02 \
                    axes=no key=no device=epsf_p

#  Convert the eps file to a pdf (com.pdf)
epstopdf pgplot.ps
mv pgplot.pdf com.pdf

# Clean up.
rm pgplot.ps s8a20110907_00029_0023_ff.sdf out=s8a20110907_00029_0023_cl.sdf \
             s8a20110907_00029_0023_bk.sdf s8a20110907_00029_0023_res.sdf

if ( $onlyone == 1 ) goto finish



#------------------------------------------------------------------------------
# The following long section produces the plots for the step fixing section
steps:

# This needs smurf to be compiled to produce debugging info about the
# step-fixing process.
#
#   % setenv CFLAGS -DDEBUG_STEPS
#   % configure
#   % touch libsmf/smf_fix_steps.c
#   % make
#   % make install
#
#   When running fixsteps the index of the bolo to record must be given on standard input.
#   Bolo [i,j] has index i+j*32    ( i=[0:31]  j=[0:39] )


#  Flatfield the data and remove a constant background from each bolometer.
$SMURF_DIR/flatfield $dataroot/s8d/20100303/00085/s8d20100303_00085_0031 ff
$KAPPA_DIR/collapse ff estimator=mean out=cl axis=mjd
$KAPPA_DIR/wcsalign cl ref=ff out=bk method=near accept
$KAPPA_DIR/sub ff bk out=resid


$KAPPA_DIR/gdset epsfcol_l
$KAPPA_DIR/gdclear
$KAPPA_DIR/picdef mode=a xpic=2 ypic=1 nooutline prefix=a

$KAPPA_DIR/ndfcopy resid'(24,30,3380:3460)' aaa
$KAPPA_DIR/wcsframe aaa pixel
rm -f pgplot*ps*
$KAPPA_DIR/linplot aaa style="'colour=black,width=3,label(1)=Time sample index,labelunits(1)=0,drawtitle=0'"
mv pgplot.ps lhs1.ps

setenv SMF_THREADS 1
echo 984 | $SMURF_DIR/fixsteps resid fixed
$KAPPA_DIR/wcsframe fixed pixel
$KAPPA_DIR/linplot fixed'(24,30,)' style="'colour=red,width=3'" noclear
mv pgplot.ps lhs2.ps

#stilts tcopy timedata.asc timedata.fits ifmt=ascii ofmt=fits
#$POLPACK/polimage timedata.fits shape=no coldat=median out=median


$KAPPA_DIR/picsel a2

$KAPPA_DIR/ndfcopy resid'(6,7,)' aaa
$KAPPA_DIR/wcsframe aaa pixel
rm -f pgplot*ps*
$KAPPA_DIR/linplot aaa style="'colour=black,width=3,label(1)=Time sample index,labelunits(1)=0,drawtitle=0'"
mv pgplot.ps rhs1.ps

$KAPPA_DIR/ndfcopy resid'(6,12,)' bbb
$KAPPA_DIR/wcsframe bbb pixel
rm -f pgplot*ps*
$KAPPA_DIR/linplot bbb style="'colour=blue,width=3'" noclear align
mv pgplot.ps rhs2.ps

setenv SMF_THREADS 1
echo 230 | $SMURF_DIR/fixsteps resid fixed
$KAPPA_DIR/wcsframe fixed pixel
$KAPPA_DIR/linplot fixed'(6,7,)' style="'colour=red,width=3'" noclear align
mv pgplot.ps rhs3.ps

/star/bin/psmerge -e -r270 lhs1.ps -r270 lhs2.ps -r270 rhs1.ps -r270 rhs2.ps -r270 rhs3.ps > steps1.ps
epstopdf steps1.ps



$KAPPA_DIR/gdclear
rm -f pgplot*ps*
$KAPPA_DIR/linplot aaa'(6,7,5000~1000)' style="'colour=black,width=3,label(1)=Time sample index,labelunits(1)=0,drawtitle=0,gap(1)=200'"
mv pgplot.ps a1.ps

stilts tcopy timedata.asc timedata.fits ifmt=ascii ofmt=fits
$POLPACK_DIR/polimage timedata.fits shape=no coldat=median out=median
$KAPPA_DIR/linplot median'(5000~1000)' style="'colour=red,width=3'" noclear align
mv pgplot.ps a2.ps

/star/bin/psmerge -e -r270 a1.ps -r270 a2.ps > steps2.ps
epstopdf steps2.ps


$KAPPA_DIR/gdclear
rm -f pgplot*ps*
$POLPACK_DIR/polimage timedata.fits shape=no coldat=diff out=diff
$KAPPA_DIR/linplot diff'(5000~1000)' style="'colour=black,width=3,label(1)=Time sample index,label(2)=Difference (pW),labelunits(1)=0,drawtitle=0,gap(1)=200'"
mv pgplot.ps a1.ps
/star/bin/psmerge -e -r270 a1.ps > steps3.ps
epstopdf steps3.ps



$KAPPA_DIR/gdclear
rm -f pgplot*ps*
$POLPACK_DIR/polimage timedata.fits shape=no coldat=diff out=diff
$KAPPA_DIR/linplot diff'(5000~1000)' ytop=0.002 ybot=-0.002 style="'colour=black,width=3,width(curves)=1,label(2)=Difference (pW),label(1)=Time sample index,labelunits(1)=0,drawtitle=0,gap(1)=200'"
mv pgplot.ps a1.ps
$POLPACK_DIR/polimage timedata.fits shape=no coldat=mdiff2 out=mdiff2
$KAPPA_DIR/linplot mdiff2'(5000~1000)' style="'colour=red,width=3'" noclear align
mv pgplot.ps a2.ps

$POLPACK_DIR/polimage timedata.fits shape=no coldat=sdiff out=sdiff
$KAPPA_DIR/linplot sdiff'(5000~1000)' style="'colour=blue,width=3'" noclear align
mv pgplot.ps a3.ps

/star/bin/psmerge -e -r270 a1.ps -r270 a2.ps -r270 a3.ps > steps4.ps
epstopdf steps4.ps



$KAPPA_DIR/gdclear
rm -f pgplot*ps*
$POLPACK_DIR/polimage timedata.fits shape=no coldat=rdiff out=rdiff
$KAPPA_DIR/linplot rdiff'(5000~1000)' ytop=0.002 ybot=-0.002 style="'colour=black,width=3,label(2)=Difference (pW),label(1)=Time sample index,labelunits(1)=0,drawtitle=0,gap(1)=200'"
mv pgplot.ps a1.ps

$POLPACK_DIR/polimage timedata.fits shape=no coldat=rms out=rms
$KAPPA_DIR/linplot rms'(5000~1000)' style="'colour=green,width=3'" noclear align
mv pgplot.ps a2.ps

/star/bin/psmerge -e -r270 a1.ps -r270 a2.ps > steps5.ps
epstopdf steps5.ps


rm -f a1.ps diff.sdf median.sdf rms.sdf steps1.ps a2.ps fixed.sdf \
   rdiff.sdf steps4.ps timedata.asc a3.ps lhs1.ps rhs1.ps sdiff.sdf \
   steps2.ps timedata.fits aaa.sdf lhs2.ps rhs2.ps stepdata.asc \
   steps5.ps bbb.sdf mdiff2.sdf rhs3.ps steps3.ps ff.sdf, cl.sdf, bk.sdf, \
   resid.sdf

if ( $onlyone == 1 ) goto finish


finish:

